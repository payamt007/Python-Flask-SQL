name: CI
on:
  push:
    branches:
      - dev
      - main
jobs:
  pri-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - uses: pre-commit/action@v3.0.1
      - uses: pre-commit-ci/lite-action@v1.0.2
        if: always()
  ci:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.12" ]
        poetry-version: [ "1.8.3" ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    services:
      db:
        image: postgres:16.3
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      cache:
        image: redis:7.4-alpine
        ports:
          - "6379:6379"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        run: poetry install
      - name: Copy SQL file to PostgreSQL container and initialize database
        run: |
          docker cp rates.sql $(docker ps -q -f "ancestor=postgres:16.3"):/docker-entrypoint-initdb.d/rates.sql
          docker exec $(docker ps -q -f "ancestor=postgres:16.3") psql -U ${{ secrets.POSTGRES_USER }} -d ${{ secrets.POSTGRES_DB }} -f /docker-entrypoint-initdb.d/rates.sql
      - name: Run the automated tests
        env:
          DATABASE_URL: postgresql+psycopg://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/${{ secrets.POSTGRES_DB }}
          CACHE_URL : ${{ secrets.CACHE_URL }}
        run: |
          poetry run pytest